{"version":3,"file":"static/js/706.fd8f89f2.chunk.js","mappings":"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","sources":["components/SearchForm.styled.js","components/SearchForm.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 2px;\n`;\n","import PropTypes from 'prop-types';\nimport { Input, Form } from './SearchForm.styled';\n\nexport default function SearchForm({\n  handleSubmit,\n  movieName,\n  handleInputChange,\n}) {\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          value={movieName}\n          name=\"query\"\n          onChange={handleInputChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </Form>\n    </>\n  );\n}\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  movieName: PropTypes.string,\n  handleInputChange: PropTypes.func\n}","import styled from 'styled-components';\n\nexport const ListLink = styled.li`\n  margin-bottom: 8px;\n  &:last-child {\n    margin-right: 0px;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport SearchForm from '../components/SearchForm';\nimport { ListLink } from './Movies.styled';\nimport { fetchMovies } from '../services/api-service';\n\nexport default function Movies() {\n  const [movieName, setMovieName] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  const name = searchParams.get('query') ?? '';\n  const moviesLocation = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      return Notiflix.Notify.failure('Enter the name of the movie');\n    }\n    setSearchParams({ query: movieName });\n    setMovieName('');\n  };\n\n  const handleInputChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n\n    fetchMovies(name)\n      .then(response => {\n        setFetchedMovies(response);\n      })\n      .catch(error => alert(error));\n  }, [name]);\n\n  return (\n    <>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        movieName={movieName}\n        handleInputChange={handleInputChange}\n      />\n      {fetchedMovies && (\n        <ul>\n          {fetchedMovies.map(({ id, title }) => (\n            <ListLink key={id}>\n              <Link to={`${id}`} state={moviesLocation}>\n                {title}\n              </Link>\n            </ListLink>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import Notiflix from 'notiflix';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '604d147cd55c0bcd03b68a72549a64de';\n\nexport async function fetchMovies(searchMovie) {\n  const response = await fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&query=${searchMovie}&language=en-US&include_adult=false`\n  );\n  if (!response.ok) {\n    if (response.status === 404) {\n      throw new Error(\n        Notiflix.Notify.failure('Search result not successful. Try again')\n      );\n    }\n    return;\n  }\n\n  const { results } = await response.json();\n\n  if (results.length === 0) {\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name.'\n    );\n    return;\n  }\n\n  return results;\n}\n\nexport async function fetchTrending() {\n  const response = await fetch(\n    `${BASE_URL}3/trending/movie/week?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (!response.ok) {\n    throw new Error(Notiflix.Notify.failure('Failed to fetch trending movies'));\n  }\n\n  const { results } = await response.json();\n  return results;\n}\n\nexport async function fetchDetails(MovieId) {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${MovieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  if (!response.ok) {\n    throw new Error(Notiflix.Notify.failure('Failed to fetch movie details'));\n  }\n\n  const results = await response.json();\n  return results;\n}\n\nexport async function fetchCast(MovieId) {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${MovieId}/credits?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) {\n    throw new Error(Notiflix.Notify.failure('Failed to fetch movie details'));\n  }\n\n  const { cast } = await response.json();\n  return cast;\n}\n\nexport async function fetchReviews(MovieId) {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${MovieId}/reviews?api_key=${API_KEY}`\n  );\n\n  if (!response.ok) {\n    throw new Error(Notiflix.Notify.failure('Failed to fetch movie details'));\n  }\n\n  const { results } = await response.json();\n  return results;\n}\n"],"names":["Form","styled","Input","SearchForm","handleSubmit","movieName","handleInputChange","onSubmit","value","name","onChange","type","autoComplete","autoFocus","placeholder","ListLink","Movies","useState","setMovieName","useSearchParams","searchParams","setSearchParams","fetchedMovies","setFetchedMovies","get","moviesLocation","useLocation","useEffect","fetchMovies","then","response","catch","error","alert","e","preventDefault","trim","Notiflix","query","currentTarget","toLowerCase","map","id","title","to","state","BASE_URL","API_KEY","searchMovie","fetch","ok","status","Error","json","results","length","fetchTrending","fetchDetails","MovieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}